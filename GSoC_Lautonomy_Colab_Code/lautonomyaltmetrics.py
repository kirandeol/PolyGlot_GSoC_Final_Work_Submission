# -*- coding: utf-8 -*-
"""LautonomyAltMetrics.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BkRvScPVFc1wvNQYTvIsMZnIMaWopH5X

# Lautonomy Data: Computing Alternative Metrics
"""

import pandas as pd
import numpy as np

with open("/content/unres_embeddings.txt") as f:
    count = 0
    for line in f:
        count += 1
    #print(count/2)

indexes = range(0, 18797)
#print(indexes[-1])

cosine_similarity = pd.DataFrame(0, index=np.arange(len(indexes)), columns = indexes)

coords_list = []
with open("/content/unres_embeddings.txt") as original:
    count = 0
    index = 0
    for line in original:
        if count % 2 != 0:
            temp_coordinates = line.split()[0:3]
            coords_list.append(temp_coordinates)
        count += 1

coords_list

lens_list = []
with open("/content/unres_embeddings.txt") as original:
    count = 0
    index = 0
    for line in original:
        if count % 2 == 0:
            lenWord = len(line.strip())
            lens_list.append(lenWord)
        count += 1

lens_list

coords_list

coords = pd.DataFrame(coords_list)
coords = coords.apply(pd.to_numeric)

coords["4"] = lens_list

coords

from google.colab import drive
drive.mount('drive')

coords.to_csv('/content/drive/MyDrive/3D_lautonomy_coords_with_weights_equalto_LENGTHOFWORD.csv', encoding='utf-8', index=False, header=False)

import random
anchor_points = random.sample(range(0, 18797), 500)

anchor_points.append(0)

anchor_points

cos_sim_list = [[] for _ in range(len(anchor_points))]

euclidean_sim_list = [[] for _ in range(len(anchor_points))]

'''
Computing the Euclidean similarities
'''
from numpy import dot
from numpy.linalg import norm
count = 0
for point in anchor_points:
    anchor = coords_list[point]
    for index in range(0, 18797):
        other = coords_list[index]
        anchor = np.array(anchor, dtype = float)
        other = np.array(other, dtype = float)
        euclidean_sim = np.linalg.norm(anchor-other)
        euclidean_sim_list[count].append(euclidean_sim)
    count += 1

len(euclidean_sim_list)

'''
Computing the cosine similarities
'''
from numpy import dot
from numpy.linalg import norm
count = 0
for point in anchor_points:
    anchor = coords_list[point]
    for index in range(0, 18797):
        other = coords_list[index]
        anchor = np.array(anchor, dtype = float)
        other = np.array(other, dtype = float)
        cos_sim = dot(anchor, other)/(norm(anchor)*norm(other))
        cos_sim_list[count].append(cos_sim)
    count += 1
#print(cos_sim_list)

print(len(cos_sim_list[0]))

cos_sim_list

cosine_similarity[anchor_points[0]]

anchor_points[0]

count = 0
for point in anchor_points:
    cosine_similarity[point] = euclidean_sim_list[count]
    count += 1

cosine_similarity.astype(bool).sum(axis=0)

m2 = (cosine_similarity != 0).any()
a = m2.index[m2]
print (a)

anchor_points

cosine_similarity[2013]

cosine_similarity

from google.colab import drive
drive.mount('drive')
cosine_similarity[anchor_points].to_csv('euclidean_similarity.csv')
!cp euclidean_similarity.csv "drive/MyDrive/"

from google.colab import drive
drive.mount('drive')
cosine_similarity.to_csv('euclidean_similarity_full.csv')
!cp euclidean_similarity_full.csv "drive/MyDrive/"